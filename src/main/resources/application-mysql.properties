# moze beda potrzebne w zaleznosci od wersji bazy/klienta
# useSSL=false i allowPublicKeyRetrieval=true

#spring.datasource.url = jdbc:mysql://localhost:3306/notes?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
spring.datasource.initialization-mode=always
spring.jpa.show-sql=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://db-notes.mysql.database.azure.com:3306/notes?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&requireSSL=false
#spring.datasource.url=jdbc:mysql://db-notes.mysql.database.azure.com:3306/notes?useSSL=true&requireSSL=false
#spring.datasource.username=user_notatnik@db-notes
#spring.datasource.password=SekjurneHaslo2019!

spring.datasource.url=jdbc:mysql://localhost:3306/todos?useSSL=false&requireSSL=false&autoReconnect=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=user_todos
spring.datasource.password=todos01

#
### Hibernate Properties
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create-drop


# String url ="jdbc:mysql://db-notes.mysql.database.azure.com:3306/{your_database}?useSSL=true&requireSSL=false";
# myDbConn = DriverManager.getConnection(url, "user_notatnik@db-notes", {your_password});